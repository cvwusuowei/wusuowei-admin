{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  created() {\n    this.current = this.$store.state.pageState.operationLog;\n    this.listLogs();\n  },\n  data() {\n    return {\n      loading: true,\n      logs: [],\n      logIds: [],\n      keywords: null,\n      current: 1,\n      size: 10,\n      count: 0,\n      isCheck: false,\n      isDelete: false,\n      optLog: {}\n    };\n  },\n  methods: {\n    selectionChange(logs) {\n      this.logIds = [];\n      logs.forEach(item => {\n        this.logIds.push(item.id);\n      });\n    },\n    searchLogs() {\n      this.current = 1;\n      this.$store.commit('updateOperationLogPageState', this.current);\n      this.listLogs();\n    },\n    sizeChange(size) {\n      this.size = size;\n      this.listLogs();\n    },\n    currentChange(current) {\n      this.current = current;\n      this.$store.commit('updateOperationLogPageState', current);\n      this.listLogs();\n    },\n    listLogs() {\n      this.axios.get('/api/admin/operation/logs', {\n        params: {\n          current: this.current,\n          size: this.size,\n          keywords: this.keywords\n        }\n      }).then(({\n        data\n      }) => {\n        this.logs = data.data.records;\n        this.count = data.data.count;\n        this.loading = false;\n      });\n    },\n    deleteLog(id) {\n      var param = {};\n      if (id != null) {\n        param = {\n          data: [id]\n        };\n      } else {\n        param = {\n          data: this.logIds\n        };\n      }\n      this.axios.delete('/api/admin/operation/logs', param).then(({\n        data\n      }) => {\n        if (data.flag) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.listLogs();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n        this.isDelete = false;\n      });\n    },\n    check(optLog) {\n      this.optLog = JSON.parse(JSON.stringify(optLog));\n      this.isCheck = true;\n    }\n  },\n  computed: {\n    tagType() {\n      return function (type) {\n        switch (type) {\n          case 'GET':\n            return '';\n          case 'POST':\n            return 'success';\n          case 'PUT':\n            return 'warning';\n          case 'DELETE':\n            return 'danger';\n        }\n      };\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}