{"ast":null,"code":"export default {\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    disable: {\n      type: Boolean,\n      default: true\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      innerText: this.value,\n      isLocked: false,\n      range: null\n    };\n  },\n  watch: {\n    value() {\n      if (!this.isLocked) {\n        this.innerText = this.value;\n      }\n    }\n  },\n  methods: {\n    clear() {\n      this.$el.innerHTML = '';\n      this.$emit('input', this.$el.innerHTML);\n    },\n    onInput() {\n      this.$emit('input', this.$el.innerHTML);\n    },\n    onFocus() {\n      this.$emit('focus', this.$el.innerHTML);\n      this.isLocked = true;\n    },\n    onBlur() {\n      // 记录光标\n      if (window.getSelection) {\n        var selection = window.getSelection();\n        this.range = selection.getRangeAt(0);\n      }\n      this.$emit('blur', this.$el.innerHTML);\n      this.isLocked = false;\n    },\n    addText(value) {\n      // 还原光标\n      if (window.getSelection) {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        // 为空初始化光标\n        if (this.range == null) {\n          this.$refs.editor.focus();\n          this.range = selection.getRangeAt(0);\n        }\n        // 删除选中内容\n        this.range.deleteContents();\n        // 添加内容\n        this.range.insertNode(this.range.createContextualFragment(value));\n        this.range.collapse(false);\n        selection.addRange(this.range);\n        this.$emit('input', this.$el.innerHTML);\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","value","type","String","default","disable","Boolean","placeholder","data","innerText","isLocked","range","watch","methods","clear","$el","innerHTML","$emit","onInput","onFocus","onBlur","window","getSelection","selection","getRangeAt","addText","removeAllRanges","$refs","editor","focus","deleteContents","insertNode","createContextualFragment","collapse","addRange"],"sources":["src/components/Editor.vue"],"sourcesContent":["<template>\r\n  <div\r\n    ref=\"editor\"\r\n    class=\"edit-container\"\r\n    v-html=\"innerText\"\r\n    :placeholder=\"placeholder\"\r\n    :contenteditable=\"disable\"\r\n    @focus=\"onFocus\"\r\n    @blur=\"onBlur\"\r\n    @input=\"onInput\" />\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    disable: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      innerText: this.value,\r\n      isLocked: false,\r\n      range: null\r\n    }\r\n  },\r\n  watch: {\r\n    value() {\r\n      if (!this.isLocked) {\r\n        this.innerText = this.value\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    clear() {\r\n      this.$el.innerHTML = ''\r\n      this.$emit('input', this.$el.innerHTML)\r\n    },\r\n    onInput() {\r\n      this.$emit('input', this.$el.innerHTML)\r\n    },\r\n    onFocus() {\r\n      this.$emit('focus', this.$el.innerHTML)\r\n      this.isLocked = true\r\n    },\r\n    onBlur() {\r\n      // 记录光标\r\n      if (window.getSelection) {\r\n        var selection = window.getSelection()\r\n        this.range = selection.getRangeAt(0)\r\n      }\r\n      this.$emit('blur', this.$el.innerHTML)\r\n      this.isLocked = false\r\n    },\r\n    addText(value) {\r\n      // 还原光标\r\n      if (window.getSelection) {\r\n        var selection = window.getSelection()\r\n        selection.removeAllRanges()\r\n        // 为空初始化光标\r\n        if (this.range == null) {\r\n          this.$refs.editor.focus()\r\n          this.range = selection.getRangeAt(0)\r\n        }\r\n        // 删除选中内容\r\n        this.range.deleteContents()\r\n        // 添加内容\r\n        this.range.insertNode(this.range.createContextualFragment(value))\r\n        this.range.collapse(false)\r\n        selection.addRange(this.range)\r\n        this.$emit('input', this.$el.innerHTML)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.edit-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 8px;\r\n  background: #f0f1f4;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  padding: 6px 12px;\r\n  box-sizing: border-box;\r\n  overflow: auto;\r\n  word-break: break-all;\r\n  outline: none;\r\n  user-select: text;\r\n  white-space: pre-wrap;\r\n  text-align: left;\r\n  -webkit-user-modify: read-write-plaintext-only;\r\n}\r\n.edit-container:empty::before {\r\n  cursor: text;\r\n  content: attr(placeholder);\r\n  color: #999;\r\n}\r\n</style>\r\n"],"mappings":"AAaA;EACAA,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,OAAA;MACAH,IAAA,EAAAI,OAAA;MACAF,OAAA;IACA;IACAG,WAAA;MACAL,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;EACA;EACAI,KAAA;IACA;MACAC,SAAA,OAAAR,KAAA;MACAS,QAAA;MACAC,KAAA;IACA;EACA;EACAC,KAAA;IACAX,MAAA;MACA,UAAAS,QAAA;QACA,KAAAD,SAAA,QAAAR,KAAA;MACA;IACA;EACA;EACAY,OAAA;IACAC,MAAA;MACA,KAAAC,GAAA,CAAAC,SAAA;MACA,KAAAC,KAAA,eAAAF,GAAA,CAAAC,SAAA;IACA;IACAE,QAAA;MACA,KAAAD,KAAA,eAAAF,GAAA,CAAAC,SAAA;IACA;IACAG,QAAA;MACA,KAAAF,KAAA,eAAAF,GAAA,CAAAC,SAAA;MACA,KAAAN,QAAA;IACA;IACAU,OAAA;MACA;MACA,IAAAC,MAAA,CAAAC,YAAA;QACA,IAAAC,SAAA,GAAAF,MAAA,CAAAC,YAAA;QACA,KAAAX,KAAA,GAAAY,SAAA,CAAAC,UAAA;MACA;MACA,KAAAP,KAAA,cAAAF,GAAA,CAAAC,SAAA;MACA,KAAAN,QAAA;IACA;IACAe,QAAAxB,KAAA;MACA;MACA,IAAAoB,MAAA,CAAAC,YAAA;QACA,IAAAC,SAAA,GAAAF,MAAA,CAAAC,YAAA;QACAC,SAAA,CAAAG,eAAA;QACA;QACA,SAAAf,KAAA;UACA,KAAAgB,KAAA,CAAAC,MAAA,CAAAC,KAAA;UACA,KAAAlB,KAAA,GAAAY,SAAA,CAAAC,UAAA;QACA;QACA;QACA,KAAAb,KAAA,CAAAmB,cAAA;QACA;QACA,KAAAnB,KAAA,CAAAoB,UAAA,MAAApB,KAAA,CAAAqB,wBAAA,CAAA/B,KAAA;QACA,KAAAU,KAAA,CAAAsB,QAAA;QACAV,SAAA,CAAAW,QAAA,MAAAvB,KAAA;QACA,KAAAM,KAAA,eAAAF,GAAA,CAAAC,SAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}