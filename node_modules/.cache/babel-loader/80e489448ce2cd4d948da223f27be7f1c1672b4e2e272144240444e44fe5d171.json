{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  created() {\n    this.current = this.$store.state.pageState.talkList;\n    this.listTalks();\n  },\n  data: function () {\n    return {\n      current: 1,\n      size: 5,\n      count: 0,\n      status: null,\n      isdelete: false,\n      talks: [],\n      previews: [],\n      talkId: null\n    };\n  },\n  methods: {\n    handleCommand(command) {\n      var arr = command.split(',');\n      this.talkId = arr[1];\n      switch (arr[0]) {\n        case '1':\n          this.$router.push({\n            path: '/talks/' + this.talkId\n          });\n          break;\n        case '2':\n          this.isdelete = true;\n          break;\n      }\n    },\n    listTalks() {\n      this.axios.get('/api/admin/talks', {\n        params: {\n          current: this.current,\n          size: this.size,\n          status: this.status\n        }\n      }).then(({\n        data\n      }) => {\n        this.talks = data.data.records;\n        this.talks.forEach(item => {\n          if (item.imgs) {\n            this.previews.push(...item.imgs);\n          }\n        });\n        this.count = data.data.count;\n      });\n    },\n    sizeChange(size) {\n      this.previews = [];\n      this.size = size;\n      this.listTalks();\n    },\n    currentChange(current) {\n      this.previews = [];\n      this.current = current;\n      this.$store.commit('updateTalkListPageState', current);\n      this.listTalks();\n    },\n    changeStatus(status) {\n      this.current = 1;\n      this.previews = [];\n      this.status = status;\n      this.listTalks();\n    },\n    deleteTalk() {\n      this.axios.delete('/api/admin/talks', {\n        data: [this.talkId]\n      }).then(({\n        data\n      }) => {\n        if (data.flag) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.listTalks();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n        this.isdelete = false;\n      });\n    }\n  },\n  computed: {\n    isActive() {\n      return function (status) {\n        return this.status == status ? 'active-status' : 'status';\n      };\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}