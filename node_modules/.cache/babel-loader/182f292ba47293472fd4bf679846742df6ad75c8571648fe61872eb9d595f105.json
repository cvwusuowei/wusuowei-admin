{"ast":null,"code":"export default {\n  data() {\n    return {\n      radioValue: 1,\n      cycle01: 1,\n      cycle02: 2,\n      average01: 0,\n      average02: 1,\n      checkboxList: [],\n      checkNum: this.$options.propsData.check\n    };\n  },\n  name: 'crontab-second',\n  props: ['check', 'radioParent'],\n  methods: {\n    radioChange() {\n      switch (this.radioValue) {\n        case 1:\n          this.$emit('update', 'second', '*', 'second');\n          break;\n        case 2:\n          this.$emit('update', 'second', this.cycleTotal);\n          break;\n        case 3:\n          this.$emit('update', 'second', this.averageTotal);\n          break;\n        case 4:\n          this.$emit('update', 'second', this.checkboxString);\n          break;\n      }\n    },\n    cycleChange() {\n      if (this.radioValue == '2') {\n        this.$emit('update', 'second', this.cycleTotal);\n      }\n    },\n    averageChange() {\n      if (this.radioValue == '3') {\n        this.$emit('update', 'second', this.averageTotal);\n      }\n    },\n    checkboxChange() {\n      if (this.radioValue == '4') {\n        this.$emit('update', 'second', this.checkboxString);\n      }\n    }\n  },\n  watch: {\n    radioValue: 'radioChange',\n    cycleTotal: 'cycleChange',\n    averageTotal: 'averageChange',\n    checkboxString: 'checkboxChange',\n    radioParent() {\n      this.radioValue = this.radioParent;\n    }\n  },\n  computed: {\n    cycleTotal: function () {\n      const cycle01 = this.checkNum(this.cycle01, 0, 58);\n      const cycle02 = this.checkNum(this.cycle02, cycle01 ? cycle01 + 1 : 1, 59);\n      return cycle01 + '-' + cycle02;\n    },\n    averageTotal: function () {\n      const average01 = this.checkNum(this.average01, 0, 58);\n      const average02 = this.checkNum(this.average02, 1, 59 - average01 || 0);\n      return average01 + '/' + average02;\n    },\n    checkboxString: function () {\n      let str = this.checkboxList.join();\n      return str == '' ? '*' : str;\n    }\n  }\n};","map":{"version":3,"names":["data","radioValue","cycle01","cycle02","average01","average02","checkboxList","checkNum","$options","propsData","check","name","props","methods","radioChange","$emit","cycleTotal","averageTotal","checkboxString","cycleChange","averageChange","checkboxChange","watch","radioParent","computed","str","join"],"sources":["src/components/Crontab/second.vue"],"sourcesContent":["<template>\r\n  <el-form size=\"small\">\r\n    <el-form-item>\r\n      <el-radio v-model=\"radioValue\" :label=\"1\"> 秒，允许的通配符[, - * /] </el-radio>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-radio v-model=\"radioValue\" :label=\"2\">\r\n        周期从\r\n        <el-input-number v-model=\"cycle01\" :min=\"0\" :max=\"58\" /> -\r\n        <el-input-number v-model=\"cycle02\" :min=\"cycle01 ? cycle01 + 1 : 1\" :max=\"59\" /> 秒\r\n      </el-radio>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-radio v-model=\"radioValue\" :label=\"3\">\r\n        从\r\n        <el-input-number v-model=\"average01\" :min=\"0\" :max=\"58\" /> 秒开始，每\r\n        <el-input-number v-model=\"average02\" :min=\"1\" :max=\"59 - average01 || 0\" /> 秒执行一次\r\n      </el-radio>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-radio v-model=\"radioValue\" :label=\"4\">\r\n        指定\r\n        <el-select clearable v-model=\"checkboxList\" placeholder=\"可多选\" multiple style=\"width: 100%\">\r\n          <el-option v-for=\"item in 60\" :key=\"item\" :value=\"item - 1\">{{ item - 1 }}</el-option>\r\n        </el-select>\r\n      </el-radio>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      radioValue: 1,\r\n      cycle01: 1,\r\n      cycle02: 2,\r\n      average01: 0,\r\n      average02: 1,\r\n      checkboxList: [],\r\n      checkNum: this.$options.propsData.check\r\n    }\r\n  },\r\n  name: 'crontab-second',\r\n  props: ['check', 'radioParent'],\r\n  methods: {\r\n    radioChange() {\r\n      switch (this.radioValue) {\r\n        case 1:\r\n          this.$emit('update', 'second', '*', 'second')\r\n          break\r\n        case 2:\r\n          this.$emit('update', 'second', this.cycleTotal)\r\n          break\r\n        case 3:\r\n          this.$emit('update', 'second', this.averageTotal)\r\n          break\r\n        case 4:\r\n          this.$emit('update', 'second', this.checkboxString)\r\n          break\r\n      }\r\n    },\r\n    cycleChange() {\r\n      if (this.radioValue == '2') {\r\n        this.$emit('update', 'second', this.cycleTotal)\r\n      }\r\n    },\r\n    averageChange() {\r\n      if (this.radioValue == '3') {\r\n        this.$emit('update', 'second', this.averageTotal)\r\n      }\r\n    },\r\n    checkboxChange() {\r\n      if (this.radioValue == '4') {\r\n        this.$emit('update', 'second', this.checkboxString)\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    radioValue: 'radioChange',\r\n    cycleTotal: 'cycleChange',\r\n    averageTotal: 'averageChange',\r\n    checkboxString: 'checkboxChange',\r\n    radioParent() {\r\n      this.radioValue = this.radioParent\r\n    }\r\n  },\r\n  computed: {\r\n    cycleTotal: function () {\r\n      const cycle01 = this.checkNum(this.cycle01, 0, 58)\r\n      const cycle02 = this.checkNum(this.cycle02, cycle01 ? cycle01 + 1 : 1, 59)\r\n      return cycle01 + '-' + cycle02\r\n    },\r\n    averageTotal: function () {\r\n      const average01 = this.checkNum(this.average01, 0, 58)\r\n      const average02 = this.checkNum(this.average02, 1, 59 - average01 || 0)\r\n      return average01 + '/' + average02\r\n    },\r\n    checkboxString: function () {\r\n      let str = this.checkboxList.join()\r\n      return str == '' ? '*' : str\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AA+BA;EACAA,KAAA;IACA;MACAC,UAAA;MACAC,OAAA;MACAC,OAAA;MACAC,SAAA;MACAC,SAAA;MACAC,YAAA;MACAC,QAAA,OAAAC,QAAA,CAAAC,SAAA,CAAAC;IACA;EACA;EACAC,IAAA;EACAC,KAAA;EACAC,OAAA;IACAC,YAAA;MACA,aAAAb,UAAA;QACA;UACA,KAAAc,KAAA;UACA;QACA;UACA,KAAAA,KAAA,0BAAAC,UAAA;UACA;QACA;UACA,KAAAD,KAAA,0BAAAE,YAAA;UACA;QACA;UACA,KAAAF,KAAA,0BAAAG,cAAA;UACA;MACA;IACA;IACAC,YAAA;MACA,SAAAlB,UAAA;QACA,KAAAc,KAAA,0BAAAC,UAAA;MACA;IACA;IACAI,cAAA;MACA,SAAAnB,UAAA;QACA,KAAAc,KAAA,0BAAAE,YAAA;MACA;IACA;IACAI,eAAA;MACA,SAAApB,UAAA;QACA,KAAAc,KAAA,0BAAAG,cAAA;MACA;IACA;EACA;EACAI,KAAA;IACArB,UAAA;IACAe,UAAA;IACAC,YAAA;IACAC,cAAA;IACAK,YAAA;MACA,KAAAtB,UAAA,QAAAsB,WAAA;IACA;EACA;EACAC,QAAA;IACAR,UAAA,WAAAA,CAAA;MACA,MAAAd,OAAA,QAAAK,QAAA,MAAAL,OAAA;MACA,MAAAC,OAAA,QAAAI,QAAA,MAAAJ,OAAA,EAAAD,OAAA,GAAAA,OAAA;MACA,OAAAA,OAAA,SAAAC,OAAA;IACA;IACAc,YAAA,WAAAA,CAAA;MACA,MAAAb,SAAA,QAAAG,QAAA,MAAAH,SAAA;MACA,MAAAC,SAAA,QAAAE,QAAA,MAAAF,SAAA,UAAAD,SAAA;MACA,OAAAA,SAAA,SAAAC,SAAA;IACA;IACAa,cAAA,WAAAA,CAAA;MACA,IAAAO,GAAA,QAAAnB,YAAA,CAAAoB,IAAA;MACA,OAAAD,GAAA,eAAAA,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}