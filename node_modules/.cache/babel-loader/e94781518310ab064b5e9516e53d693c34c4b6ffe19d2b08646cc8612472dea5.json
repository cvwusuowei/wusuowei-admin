{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Crontab from '@/components/Crontab';\nimport router from '@/router';\nexport default {\n  components: {\n    Crontab\n  },\n  created() {\n    this.current = this.$store.state.pageState.quartz;\n    this.listJobGroups();\n    this.listJobs();\n  },\n  data() {\n    return {\n      job: {},\n      copyJob: {},\n      title: '',\n      loading: true,\n      isDelete: false,\n      current: 1,\n      size: 10,\n      count: 0,\n      dialogFormVisible: false,\n      openCron: false,\n      expression: '',\n      openView: false,\n      editOrUpdate: true,\n      searchParams: {},\n      jobGroups: [],\n      jobs: [],\n      jobIds: [],\n      rules: {\n        jobName: [{\n          required: true,\n          message: '任务名称不能为空',\n          trigger: 'blur'\n        }],\n        invokeTarget: [{\n          required: true,\n          message: '调用目标字符串不能为空',\n          trigger: 'blur'\n        }],\n        cronExpression: [{\n          required: true,\n          message: 'cron执行表达式不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    sizeChange(size) {\n      this.size = size;\n      this.listJobs();\n    },\n    currentChange(current) {\n      this.current = current;\n      this.$store.commit('updateQuartzPageState', current);\n      this.listJobs();\n    },\n    listJobGroups() {\n      this.axios.get('/api/admin/jobs/jobGroups').then(({\n        data\n      }) => {\n        this.jobGroups = data.data;\n      });\n    },\n    listJobs() {\n      this.searchParams.current = this.current;\n      this.searchParams.size = this.size;\n      this.axios.get('/api/admin/jobs', {\n        params: this.searchParams\n      }).then(({\n        data\n      }) => {\n        this.jobs = data.data.records;\n        this.count = data.data.count;\n        this.loading = false;\n      });\n    },\n    reset() {\n      this.searchParams = {};\n      this.listJobs();\n    },\n    selectionChange(jobs) {\n      this.jobIds = [];\n      jobs.forEach(item => {\n        this.jobIds.push(item.id);\n      });\n    },\n    changeStatus(job) {\n      this.axios.put('/api/admin/jobs/status', {\n        id: job.id,\n        status: job.status\n      }).then(({\n        data\n      }) => {\n        if (data.flag) {\n          this.$notify.success({\n            title: '成功',\n            message: '修改成功'\n          });\n          this.listJobs();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: '修改失败'\n          });\n        }\n      });\n    },\n    deleteJobs(id) {\n      let param = {};\n      if (id == null) {\n        param = {\n          data: this.jobIds\n        };\n      } else {\n        param = {\n          data: [id]\n        };\n      }\n      this.axios.delete('/api/admin/jobs', param).then(({\n        data\n      }) => {\n        if (data.flag) {\n          this.$notify.success({\n            title: '成功',\n            message: '删除成功'\n          });\n          this.listJobs();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: '删除失败'\n          });\n        }\n        this.isDelete = false;\n      });\n    },\n    handleShowCron() {\n      this.expression = this.job.cronExpression;\n      this.openCron = true;\n    },\n    handleAdd() {\n      this.editOrUpdate = false;\n      this.job = {};\n      this.title = '新增任务';\n      this.dialogFormVisible = true;\n    },\n    handleChange(jobId) {\n      this.editOrUpdate = true;\n      this.title = '编辑任务';\n      this.axios.get('/api/admin/jobs/' + jobId).then(({\n        data\n      }) => {\n        this.job = data.data;\n      });\n      this.dialogFormVisible = true;\n    },\n    crontabFill(value) {\n      this.job.cronExpression = value;\n    },\n    handleEditOrUpdate() {\n      if (this.editOrUpdate === true) {\n        this.axios.put('/api/admin/jobs', this.job).then(({\n          data\n        }) => {\n          if (data.flag) {\n            this.$notify.success({\n              title: '修改成功',\n              message: data.message\n            });\n            this.listJobs();\n          } else {\n            this.$notify.error({\n              title: '修改失败',\n              message: data.message\n            });\n          }\n          this.dialogFormVisible = false;\n        });\n      } else if (this.editOrUpdate === false) {\n        this.axios.post('/api/admin/jobs', this.job).then(({\n          data\n        }) => {\n          if (data.flag) {\n            this.$notify.success({\n              title: '添加成功',\n              message: data.message\n            });\n            this.listJobs();\n          } else {\n            this.$notify.error({\n              title: '添加失败',\n              message: data.message\n            });\n          }\n          this.dialogFormVisible = false;\n        });\n      }\n    },\n    handleCommand(command, row) {\n      switch (command) {\n        case 'handleRun':\n          this.handleRun(row);\n          break;\n        case 'handleView':\n          this.handleView(row);\n          break;\n        case 'handleJobLog':\n          this.handleJobLog(row.id);\n          break;\n        default:\n          break;\n      }\n    },\n    handleRun(job) {\n      let params = {\n        id: job.id,\n        jobGroup: job.jobGroup\n      };\n      this.axios.put('/api/admin/jobs/run', params).then(({\n        data\n      }) => {\n        if (data.flag) {\n          this.$notify.success({\n            title: '执行成功',\n            message: data.message\n          });\n        } else {\n          this.$notify.error({\n            title: '执行失败',\n            message: data.message\n          });\n        }\n      });\n    },\n    handleView(job) {\n      this.openView = true;\n      this.job = job;\n    },\n    handleJobLog(jobId) {\n      router.push({\n        path: '/quartz/log/' + jobId\n      });\n    },\n    openLog() {\n      router.push({\n        path: '/quartz/log/all'\n      });\n    },\n    afterClosed() {\n      this.job = '';\n    }\n  }\n};","map":{"version":3,"names":["Crontab","router","components","created","current","$store","state","pageState","quartz","listJobGroups","listJobs","data","job","copyJob","title","loading","isDelete","size","count","dialogFormVisible","openCron","expression","openView","editOrUpdate","searchParams","jobGroups","jobs","jobIds","rules","jobName","required","message","trigger","invokeTarget","cronExpression","methods","sizeChange","currentChange","commit","axios","get","then","params","records","reset","selectionChange","forEach","item","push","id","changeStatus","put","status","flag","$notify","success","error","deleteJobs","param","delete","handleShowCron","handleAdd","handleChange","jobId","crontabFill","value","handleEditOrUpdate","post","handleCommand","command","row","handleRun","handleView","handleJobLog","jobGroup","path","openLog","afterClosed"],"sources":["src/views/quartz/Quartz.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"main-card\">\r\n    <el-form ref=\"queryForm\" :inline=\"true\" label-width=\"68px\">\r\n      <el-form-item label=\"任务名称\" prop=\"jobName\">\r\n        <el-input\r\n          v-model=\"searchParams.jobName\"\r\n          placeholder=\"请输入任务名称\"\r\n          clearable\r\n          size=\"small\"\r\n          @keyup.enter.native=\"listJobs\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"任务组名\" prop=\"jobGroup\">\r\n        <el-select\r\n          @change=\"listJobs\"\r\n          v-model=\"searchParams.jobGroup\"\r\n          placeholder=\"请选择任务组名\"\r\n          clearable\r\n          size=\"small\">\r\n          <el-option v-for=\"jobGroup in jobGroups\" :key=\"jobGroup\" :label=\"jobGroup\" :value=\"jobGroup\" />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"任务状态\" prop=\"status\">\r\n        <el-select @change=\"listJobs\" v-model=\"searchParams.status\" placeholder=\"请选择任务状态\" clearable size=\"small\">\r\n          <el-option label=\"正常\" :value=\"1\" />\r\n          <el-option label=\"暂停\" :value=\"0\" />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"small\" @click=\"listJobs\">搜索</el-button>\r\n        <el-button icon=\"el-icon-refresh\" size=\"small\" @click=\"reset\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" @click=\"handleAdd\">新增</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button type=\"info\" icon=\"el-icon-s-operation\" size=\"small\" @click=\"openLog\">日志</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"danger\"\r\n          size=\"small\"\r\n          icon=\"el-icon-delete\"\r\n          :disabled=\"jobIds.length == 0\"\r\n          @click=\"isDelete = true\">\r\n          批量删除\r\n        </el-button>\r\n      </el-col>\r\n    </el-row>\r\n    <div style=\"margin-top: 5px\">\r\n      <el-table border style=\"width: 100%\" :data=\"jobs\" @selection-change=\"selectionChange\" v-loading=\"loading\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\r\n        <el-table-column label=\"任务名称\" width=\"160\" align=\"center\" prop=\"jobName\" :show-overflow-tooltip=\"true\" />\r\n        <el-table-column label=\"任务组名\" align=\"center\" prop=\"jobGroup\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag>\r\n              {{ scope.row.jobGroup }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"调用目标字符串\" align=\"center\" prop=\"invokeTarget\" :show-overflow-tooltip=\"true\" />\r\n        <el-table-column label=\"cron执行表达式\" align=\"center\" prop=\"cronExpression\" :show-overflow-tooltip=\"true\" />\r\n        <el-table-column label=\"状态\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-switch\r\n              v-model=\"scope.row.status\"\r\n              active-color=\"#13ce66\"\r\n              inactive-color=\"#F4F4F5\"\r\n              :active-value=\"1\"\r\n              :inactive-value=\"0\"\r\n              @change=\"changeStatus(scope.row)\"></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"创建时间\" align=\"center\" width=\"160\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.createTime | dateTime }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"备注\" align=\"center\" width=\"160\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.remark }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button size=\"mini\" type=\"text\" @click=\"handleChange(scope.row.id)\">编辑</el-button>\r\n            <el-popconfirm title=\"确定删除吗？\" style=\"margin-left: 10px\" @confirm=\"deleteJobs(scope.row.id)\">\r\n              <el-button size=\"mini\" type=\"text\" slot=\"reference\">删除</el-button>\r\n            </el-popconfirm>\r\n            <el-dropdown size=\"mini\" @command=\"(command) => handleCommand(command, scope.row)\">\r\n              <el-button size=\"mini\" type=\"text\" style=\"margin-left: 9px\">更多</el-button>\r\n              <el-dropdown-menu slot=\"dropdown\">\r\n                <el-dropdown-item command=\"handleRun\" icon=\"el-icon-caret-right\">执行一次</el-dropdown-item>\r\n                <el-dropdown-item command=\"handleView\" icon=\"el-icon-view\">任务详细</el-dropdown-item>\r\n                <el-dropdown-item command=\"handleJobLog\" icon=\"el-icon-s-operation\">调度日志</el-dropdown-item>\r\n              </el-dropdown-menu>\r\n            </el-dropdown>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n    <el-pagination\r\n      class=\"pagination-container\"\r\n      background\r\n      @size-change=\"sizeChange\"\r\n      @current-change=\"currentChange\"\r\n      :current-page=\"current\"\r\n      :page-size=\"size\"\r\n      :total=\"count\"\r\n      :page-sizes=\"[10, 20]\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\" />\r\n    <el-dialog :visible.sync=\"isDelete\" width=\"30%\">\r\n      <div class=\"dialog-title-container\" slot=\"title\"><i class=\"el-icon-warning\" style=\"color: #ff9900\" />提示</div>\r\n      <div style=\"font-size: 1rem\">是否删除选中项？</div>\r\n      <div slot=\"footer\">\r\n        <el-button @click=\"isDelete = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"deleteJobs(null)\"> 确 定 </el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog :title=\"title\" :visible.sync=\"dialogFormVisible\" width=\"800px\" append-to-body>\r\n      <el-form ref=\"dataForm\" :model=\"job\" :rules=\"rules\" label-width=\"120px\">\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"任务名称\" prop=\"jobName\">\r\n              <el-input v-model=\"job.jobName\" placeholder=\"请输入任务名称\" />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"任务分组\" prop=\"jobName\">\r\n              <el-input v-model=\"job.jobGroup\" placeholder=\"请输入任务名称\" />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item prop=\"invokeTarget\">\r\n              <span slot=\"label\">\r\n                调用方法\r\n                <el-tooltip placement=\"top\">\r\n                  <div slot=\"content\">\r\n                    Bean调用示例：auroraQuartz.blogParams('blog')\r\n                    <br />Class类调用示例：com.aurora.quartz.AuroraQuartz.blogParams('blog')\r\n                    <br />参数说明：支持字符串，布尔类型，长整型，浮点型，整型\r\n                  </div>\r\n                  <i class=\"el-icon-question\"></i>\r\n                </el-tooltip>\r\n              </span>\r\n              <el-input v-model=\"job.invokeTarget\" placeholder=\"请输入调用目标字符串\" />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"cron表达式\" prop=\"cronExpression\">\r\n              <el-input v-model=\"job.cronExpression\" placeholder=\"请输入cron执行表达式\">\r\n                <template slot=\"append\">\r\n                  <el-button type=\"primary\" @click=\"handleShowCron\">\r\n                    生成表达式\r\n                    <i class=\"el-icon-time el-icon--right\"></i>\r\n                  </el-button>\r\n                </template>\r\n              </el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"错误策略\" prop=\"misfirePolicy\">\r\n              <el-radio-group v-model=\"job.misfirePolicy\">\r\n                <el-radio-button :label=\"0\">默认策略</el-radio-button>\r\n                <el-radio-button :label=\"1\">立即执行</el-radio-button>\r\n                <el-radio-button :label=\"2\">执行一次</el-radio-button>\r\n                <el-radio-button :label=\"3\">放弃执行</el-radio-button>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"是否并发\" prop=\"concurrent\">\r\n              <el-radio-group v-model=\"job.concurrent\" size=\"small\">\r\n                <el-radio-button :label=\"0\">允许</el-radio-button>\r\n                <el-radio-button :label=\"1\">禁止</el-radio-button>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"状态\">\r\n              <el-radio-group v-model=\"job.status\">\r\n                <el-radio :label=\"1\">正常</el-radio>\r\n                <el-radio :label=\"0\">暂停</el-radio>\r\n              </el-radio-group>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"备注\" prop=\"remark\">\r\n              <el-input v-model=\"job.remark\" placeholder=\"备注信息\" type=\"textarea\" />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleEditOrUpdate\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog title=\"Cron表达式生成器\" :visible.sync=\"openCron\" append-to-body destroy-on-close class=\"scrollbar\">\r\n      <crontab @hide=\"openCron = false\" @fill=\"crontabFill\" :expression=\"expression\"></crontab>\r\n    </el-dialog>\r\n    <el-dialog title=\"任务详细\" :visible.sync=\"openView\" @closed=\"afterClosed\" width=\"700px\" append-to-body>\r\n      <el-form ref=\"form\" :model=\"job\" label-width=\"120px\" size=\"mini\">\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"任务编号：\">{{ job.id }}</el-form-item>\r\n            <el-form-item label=\"任务名称：\">{{ job.jobName }}</el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"任务分组：\">\r\n              {{ job.jobGroup }}\r\n            </el-form-item>\r\n            <el-form-item label=\"创建时间：\">{{ job.createTime | dateTime }}</el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"cron表达式：\">{{ job.cronExpression }}</el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"下次执行时间：\">{{ job.nextValidTime | dateTime }}</el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <el-form-item label=\"调用目标方法：\">{{ job.invokeTarget }}</el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"任务状态：\">\r\n              <div v-if=\"job.status === 1\">正常</div>\r\n              <div v-else-if=\"job.status === 0\">暂停</div>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"是否并发：\">\r\n              <div v-if=\"job.concurrent === 1\">允许</div>\r\n              <div v-else-if=\"job.concurrent === 0\">禁止</div>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"执行策略：\">\r\n              <div v-if=\"job.concurrent === 0\">默认策略</div>\r\n              <div v-else-if=\"job.concurrent === 1\">立即执行</div>\r\n              <div v-else-if=\"job.concurrent === 2\">执行一次</div>\r\n              <div v-else-if=\"job.concurrent === 3\">放弃执行</div>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"12\">\r\n            <el-form-item label=\"备注：\">\r\n              <div>{{ job.remark }}</div>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"openView = false\">关 闭</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </el-card>\r\n</template>\r\n<script>\r\nimport Crontab from '@/components/Crontab'\r\nimport router from '@/router'\r\nexport default {\r\n  components: { Crontab },\r\n  created() {\r\n    this.current = this.$store.state.pageState.quartz\r\n    this.listJobGroups()\r\n    this.listJobs()\r\n  },\r\n  data() {\r\n    return {\r\n      job: {},\r\n      copyJob: {},\r\n      title: '',\r\n      loading: true,\r\n      isDelete: false,\r\n      current: 1,\r\n      size: 10,\r\n      count: 0,\r\n      dialogFormVisible: false,\r\n      openCron: false,\r\n      expression: '',\r\n      openView: false,\r\n      editOrUpdate: true,\r\n      searchParams: {},\r\n      jobGroups: [],\r\n      jobs: [],\r\n      jobIds: [],\r\n      rules: {\r\n        jobName: [{ required: true, message: '任务名称不能为空', trigger: 'blur' }],\r\n        invokeTarget: [{ required: true, message: '调用目标字符串不能为空', trigger: 'blur' }],\r\n        cronExpression: [{ required: true, message: 'cron执行表达式不能为空', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    sizeChange(size) {\r\n      this.size = size\r\n      this.listJobs()\r\n    },\r\n    currentChange(current) {\r\n      this.current = current\r\n      this.$store.commit('updateQuartzPageState', current)\r\n      this.listJobs()\r\n    },\r\n    listJobGroups() {\r\n      this.axios.get('/api/admin/jobs/jobGroups').then(({ data }) => {\r\n        this.jobGroups = data.data\r\n      })\r\n    },\r\n    listJobs() {\r\n      this.searchParams.current = this.current\r\n      this.searchParams.size = this.size\r\n      this.axios\r\n        .get('/api/admin/jobs', {\r\n          params: this.searchParams\r\n        })\r\n        .then(({ data }) => {\r\n          this.jobs = data.data.records\r\n          this.count = data.data.count\r\n          this.loading = false\r\n        })\r\n    },\r\n    reset() {\r\n      this.searchParams = {}\r\n      this.listJobs()\r\n    },\r\n    selectionChange(jobs) {\r\n      this.jobIds = []\r\n      jobs.forEach((item) => {\r\n        this.jobIds.push(item.id)\r\n      })\r\n    },\r\n    changeStatus(job) {\r\n      this.axios\r\n        .put('/api/admin/jobs/status', {\r\n          id: job.id,\r\n          status: job.status\r\n        })\r\n        .then(({ data }) => {\r\n          if (data.flag) {\r\n            this.$notify.success({\r\n              title: '成功',\r\n              message: '修改成功'\r\n            })\r\n            this.listJobs()\r\n          } else {\r\n            this.$notify.error({\r\n              title: '失败',\r\n              message: '修改失败'\r\n            })\r\n          }\r\n        })\r\n    },\r\n    deleteJobs(id) {\r\n      let param = {}\r\n      if (id == null) {\r\n        param = { data: this.jobIds }\r\n      } else {\r\n        param = { data: [id] }\r\n      }\r\n      this.axios.delete('/api/admin/jobs', param).then(({ data }) => {\r\n        if (data.flag) {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '删除成功'\r\n          })\r\n          this.listJobs()\r\n        } else {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: '删除失败'\r\n          })\r\n        }\r\n        this.isDelete = false\r\n      })\r\n    },\r\n    handleShowCron() {\r\n      this.expression = this.job.cronExpression\r\n      this.openCron = true\r\n    },\r\n    handleAdd() {\r\n      this.editOrUpdate = false\r\n      this.job = {}\r\n      this.title = '新增任务'\r\n      this.dialogFormVisible = true\r\n    },\r\n    handleChange(jobId) {\r\n      this.editOrUpdate = true\r\n      this.title = '编辑任务'\r\n      this.axios.get('/api/admin/jobs/' + jobId).then(({ data }) => {\r\n        this.job = data.data\r\n      })\r\n      this.dialogFormVisible = true\r\n    },\r\n    crontabFill(value) {\r\n      this.job.cronExpression = value\r\n    },\r\n    handleEditOrUpdate() {\r\n      if (this.editOrUpdate === true) {\r\n        this.axios.put('/api/admin/jobs', this.job).then(({ data }) => {\r\n          if (data.flag) {\r\n            this.$notify.success({\r\n              title: '修改成功',\r\n              message: data.message\r\n            })\r\n            this.listJobs()\r\n          } else {\r\n            this.$notify.error({\r\n              title: '修改失败',\r\n              message: data.message\r\n            })\r\n          }\r\n          this.dialogFormVisible = false\r\n        })\r\n      } else if (this.editOrUpdate === false) {\r\n        this.axios.post('/api/admin/jobs', this.job).then(({ data }) => {\r\n          if (data.flag) {\r\n            this.$notify.success({\r\n              title: '添加成功',\r\n              message: data.message\r\n            })\r\n            this.listJobs()\r\n          } else {\r\n            this.$notify.error({\r\n              title: '添加失败',\r\n              message: data.message\r\n            })\r\n          }\r\n          this.dialogFormVisible = false\r\n        })\r\n      }\r\n    },\r\n    handleCommand(command, row) {\r\n      switch (command) {\r\n        case 'handleRun':\r\n          this.handleRun(row)\r\n          break\r\n        case 'handleView':\r\n          this.handleView(row)\r\n          break\r\n        case 'handleJobLog':\r\n          this.handleJobLog(row.id)\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    handleRun(job) {\r\n      let params = {\r\n        id: job.id,\r\n        jobGroup: job.jobGroup\r\n      }\r\n      this.axios.put('/api/admin/jobs/run', params).then(({ data }) => {\r\n        if (data.flag) {\r\n          this.$notify.success({\r\n            title: '执行成功',\r\n            message: data.message\r\n          })\r\n        } else {\r\n          this.$notify.error({\r\n            title: '执行失败',\r\n            message: data.message\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleView(job) {\r\n      this.openView = true\r\n      this.job = job\r\n    },\r\n    handleJobLog(jobId) {\r\n      router.push({ path: '/quartz/log/' + jobId })\r\n    },\r\n    openLog() {\r\n      router.push({ path: '/quartz/log/all' })\r\n    },\r\n    afterClosed() {\r\n      this.job = ''\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.el-textarea__inner {\r\n  resize: none !important;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}