{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  created() {\n    this.current = this.$store.state.pageState.category;\n    this.listCategories();\n  },\n  data: function () {\n    return {\n      isDelete: false,\n      loading: true,\n      addOrEdit: false,\n      keywords: null,\n      categoryIds: [],\n      categories: [],\n      categoryForm: {\n        id: null,\n        categoryName: ''\n      },\n      current: 1,\n      size: 10,\n      count: 0\n    };\n  },\n  methods: {\n    selectionChange(categories) {\n      this.categoryIds = [];\n      categories.forEach(item => {\n        this.categoryIds.push(item.id);\n      });\n    },\n    searchCategories() {\n      this.current = 1;\n      this.listCategories();\n    },\n    sizeChange(size) {\n      this.size = size;\n      this.listCategories();\n    },\n    currentChange(current) {\n      this.current = current;\n      this.$store.commit('updateCategoryPageState', current);\n      this.listCategories();\n    },\n    deleteCategory(id) {\n      let param = {};\n      if (id == null) {\n        param = {\n          data: this.categoryIds\n        };\n      } else {\n        param = {\n          data: [id]\n        };\n      }\n      this.axios.delete('/api/admin/categories', param).then(({\n        data\n      }) => {\n        if (data.flag) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.listCategories();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n        this.isDelete = false;\n      });\n    },\n    listCategories() {\n      this.axios.get('/api/admin/categories', {\n        params: {\n          current: this.current,\n          size: this.size,\n          keywords: this.keywords\n        }\n      }).then(({\n        data\n      }) => {\n        this.categories = data.data.records;\n        this.count = data.data.count;\n        this.loading = false;\n      });\n    },\n    openModel(category) {\n      if (category != null) {\n        this.categoryForm = JSON.parse(JSON.stringify(category));\n        this.$refs.categoryTitle.innerHTML = '修改分类';\n      } else {\n        this.categoryForm.id = null;\n        this.categoryForm.categoryName = '';\n        this.$refs.categoryTitle.innerHTML = '添加分类';\n      }\n      this.addOrEdit = true;\n    },\n    addOrEditCategory() {\n      if (this.categoryForm.categoryName.trim() == '') {\n        this.$message.error('分类名不能为空');\n        return false;\n      }\n      this.axios.post('/api/admin/categories', this.categoryForm).then(({\n        data\n      }) => {\n        if (data.flag) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.listCategories();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n        this.addOrEdit = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["created","current","$store","state","pageState","category","listCategories","data","isDelete","loading","addOrEdit","keywords","categoryIds","categories","categoryForm","id","categoryName","size","count","methods","selectionChange","forEach","item","push","searchCategories","sizeChange","currentChange","commit","deleteCategory","param","axios","delete","then","flag","$notify","success","title","message","error","get","params","records","openModel","JSON","parse","stringify","$refs","categoryTitle","innerHTML","addOrEditCategory","trim","$message","post"],"sources":["src/views/category/Category.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"main-card\">\r\n    <div class=\"title\">{{ this.$route.name }}</div>\r\n    <div class=\"operation-container\">\r\n      <el-button type=\"primary\" size=\"small\" icon=\"el-icon-plus\" @click=\"openModel(null)\"> 新增 </el-button>\r\n      <el-button\r\n        type=\"danger\"\r\n        size=\"small\"\r\n        icon=\"el-icon-delete\"\r\n        :disabled=\"this.categoryIds.length == 0\"\r\n        @click=\"isDelete = true\">\r\n        批量删除\r\n      </el-button>\r\n      <div style=\"margin-left: auto\">\r\n        <el-input\r\n          v-model=\"keywords\"\r\n          prefix-icon=\"el-icon-search\"\r\n          size=\"small\"\r\n          placeholder=\"请输入分类名\"\r\n          style=\"width: 200px\"\r\n          @keyup.enter.native=\"searchCategories\" />\r\n        <el-button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          icon=\"el-icon-search\"\r\n          style=\"margin-left: 1rem\"\r\n          @click=\"searchCategories\">\r\n          搜索\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n    <el-table border :data=\"categories\" @selection-change=\"selectionChange\" v-loading=\"loading\">\r\n      <el-table-column type=\"selection\" width=\"55\" />\r\n      <el-table-column prop=\"categoryName\" label=\"分类名\" align=\"center\" />\r\n      <el-table-column prop=\"articleCount\" label=\"文章量\" align=\"center\" />\r\n      <el-table-column prop=\"createTime\" label=\"创建时间\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <i class=\"el-icon-time\" style=\"margin-right: 5px\" />\r\n          {{ scope.row.createTime | date }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"160\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" size=\"mini\" @click=\"openModel(scope.row)\"> 编辑 </el-button>\r\n          <el-popconfirm title=\"确定删除吗？\" style=\"margin-left: 1rem\" @confirm=\"deleteCategory(scope.row.id)\">\r\n            <el-button size=\"mini\" type=\"danger\" slot=\"reference\"> 删除 </el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n      class=\"pagination-container\"\r\n      background\r\n      @size-change=\"sizeChange\"\r\n      @current-change=\"currentChange\"\r\n      :current-page=\"current\"\r\n      :page-size=\"size\"\r\n      :total=\"count\"\r\n      :page-sizes=\"[10, 20]\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\" />\r\n    <el-dialog :visible.sync=\"isDelete\" width=\"30%\">\r\n      <div class=\"dialog-title-container\" slot=\"title\"><i class=\"el-icon-warning\" style=\"color: #ff9900\" />提示</div>\r\n      <div style=\"font-size: 1rem\">是否删除选中项？</div>\r\n      <div slot=\"footer\">\r\n        <el-button @click=\"isDelete = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"deleteCategory(null)\"> 确 定 </el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog :visible.sync=\"addOrEdit\" width=\"30%\">\r\n      <div class=\"dialog-title-container\" slot=\"title\" ref=\"categoryTitle\" />\r\n      <el-form label-width=\"80px\" size=\"medium\" :model=\"categoryForm\">\r\n        <el-form-item label=\"分类名\">\r\n          <el-input v-model=\"categoryForm.categoryName\" style=\"width: 220px\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\">\r\n        <el-button @click=\"addOrEdit = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addOrEditCategory\"> 确 定 </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  created() {\r\n    this.current = this.$store.state.pageState.category\r\n    this.listCategories()\r\n  },\r\n  data: function () {\r\n    return {\r\n      isDelete: false,\r\n      loading: true,\r\n      addOrEdit: false,\r\n      keywords: null,\r\n      categoryIds: [],\r\n      categories: [],\r\n      categoryForm: {\r\n        id: null,\r\n        categoryName: ''\r\n      },\r\n      current: 1,\r\n      size: 10,\r\n      count: 0\r\n    }\r\n  },\r\n  methods: {\r\n    selectionChange(categories) {\r\n      this.categoryIds = []\r\n      categories.forEach((item) => {\r\n        this.categoryIds.push(item.id)\r\n      })\r\n    },\r\n    searchCategories() {\r\n      this.current = 1\r\n      this.listCategories()\r\n    },\r\n    sizeChange(size) {\r\n      this.size = size\r\n      this.listCategories()\r\n    },\r\n    currentChange(current) {\r\n      this.current = current\r\n      this.$store.commit('updateCategoryPageState', current)\r\n      this.listCategories()\r\n    },\r\n    deleteCategory(id) {\r\n      let param = {}\r\n      if (id == null) {\r\n        param = { data: this.categoryIds }\r\n      } else {\r\n        param = { data: [id] }\r\n      }\r\n      this.axios.delete('/api/admin/categories', param).then(({ data }) => {\r\n        if (data.flag) {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: data.message\r\n          })\r\n          this.listCategories()\r\n        } else {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: data.message\r\n          })\r\n        }\r\n        this.isDelete = false\r\n      })\r\n    },\r\n    listCategories() {\r\n      this.axios\r\n        .get('/api/admin/categories', {\r\n          params: {\r\n            current: this.current,\r\n            size: this.size,\r\n            keywords: this.keywords\r\n          }\r\n        })\r\n        .then(({ data }) => {\r\n          this.categories = data.data.records\r\n          this.count = data.data.count\r\n          this.loading = false\r\n        })\r\n    },\r\n    openModel(category) {\r\n      if (category != null) {\r\n        this.categoryForm = JSON.parse(JSON.stringify(category))\r\n        this.$refs.categoryTitle.innerHTML = '修改分类'\r\n      } else {\r\n        this.categoryForm.id = null\r\n        this.categoryForm.categoryName = ''\r\n        this.$refs.categoryTitle.innerHTML = '添加分类'\r\n      }\r\n      this.addOrEdit = true\r\n    },\r\n    addOrEditCategory() {\r\n      if (this.categoryForm.categoryName.trim() == '') {\r\n        this.$message.error('分类名不能为空')\r\n        return false\r\n      }\r\n      this.axios.post('/api/admin/categories', this.categoryForm).then(({ data }) => {\r\n        if (data.flag) {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: data.message\r\n          })\r\n          this.listCategories()\r\n        } else {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: data.message\r\n          })\r\n        }\r\n        this.addOrEdit = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAoFA;EACAA,QAAA;IACA,KAAAC,OAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,SAAA,CAAAC,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,IAAA,WAAAA,CAAA;IACA;MACAC,QAAA;MACAC,OAAA;MACAC,SAAA;MACAC,QAAA;MACAC,WAAA;MACAC,UAAA;MACAC,YAAA;QACAC,EAAA;QACAC,YAAA;MACA;MACAf,OAAA;MACAgB,IAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,gBAAAP,UAAA;MACA,KAAAD,WAAA;MACAC,UAAA,CAAAQ,OAAA,CAAAC,IAAA;QACA,KAAAV,WAAA,CAAAW,IAAA,CAAAD,IAAA,CAAAP,EAAA;MACA;IACA;IACAS,iBAAA;MACA,KAAAvB,OAAA;MACA,KAAAK,cAAA;IACA;IACAmB,WAAAR,IAAA;MACA,KAAAA,IAAA,GAAAA,IAAA;MACA,KAAAX,cAAA;IACA;IACAoB,cAAAzB,OAAA;MACA,KAAAA,OAAA,GAAAA,OAAA;MACA,KAAAC,MAAA,CAAAyB,MAAA,4BAAA1B,OAAA;MACA,KAAAK,cAAA;IACA;IACAsB,eAAAb,EAAA;MACA,IAAAc,KAAA;MACA,IAAAd,EAAA;QACAc,KAAA;UAAAtB,IAAA,OAAAK;QAAA;MACA;QACAiB,KAAA;UAAAtB,IAAA,GAAAQ,EAAA;QAAA;MACA;MACA,KAAAe,KAAA,CAAAC,MAAA,0BAAAF,KAAA,EAAAG,IAAA;QAAAzB;MAAA;QACA,IAAAA,IAAA,CAAA0B,IAAA;UACA,KAAAC,OAAA,CAAAC,OAAA;YACAC,KAAA;YACAC,OAAA,EAAA9B,IAAA,CAAA8B;UACA;UACA,KAAA/B,cAAA;QACA;UACA,KAAA4B,OAAA,CAAAI,KAAA;YACAF,KAAA;YACAC,OAAA,EAAA9B,IAAA,CAAA8B;UACA;QACA;QACA,KAAA7B,QAAA;MACA;IACA;IACAF,eAAA;MACA,KAAAwB,KAAA,CACAS,GAAA;QACAC,MAAA;UACAvC,OAAA,OAAAA,OAAA;UACAgB,IAAA,OAAAA,IAAA;UACAN,QAAA,OAAAA;QACA;MACA,GACAqB,IAAA;QAAAzB;MAAA;QACA,KAAAM,UAAA,GAAAN,IAAA,CAAAA,IAAA,CAAAkC,OAAA;QACA,KAAAvB,KAAA,GAAAX,IAAA,CAAAA,IAAA,CAAAW,KAAA;QACA,KAAAT,OAAA;MACA;IACA;IACAiC,UAAArC,QAAA;MACA,IAAAA,QAAA;QACA,KAAAS,YAAA,GAAA6B,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,CAAAxC,QAAA;QACA,KAAAyC,KAAA,CAAAC,aAAA,CAAAC,SAAA;MACA;QACA,KAAAlC,YAAA,CAAAC,EAAA;QACA,KAAAD,YAAA,CAAAE,YAAA;QACA,KAAA8B,KAAA,CAAAC,aAAA,CAAAC,SAAA;MACA;MACA,KAAAtC,SAAA;IACA;IACAuC,kBAAA;MACA,SAAAnC,YAAA,CAAAE,YAAA,CAAAkC,IAAA;QACA,KAAAC,QAAA,CAAAb,KAAA;QACA;MACA;MACA,KAAAR,KAAA,CAAAsB,IAAA,+BAAAtC,YAAA,EAAAkB,IAAA;QAAAzB;MAAA;QACA,IAAAA,IAAA,CAAA0B,IAAA;UACA,KAAAC,OAAA,CAAAC,OAAA;YACAC,KAAA;YACAC,OAAA,EAAA9B,IAAA,CAAA8B;UACA;UACA,KAAA/B,cAAA;QACA;UACA,KAAA4B,OAAA,CAAAI,KAAA;YACAF,KAAA;YACAC,OAAA,EAAA9B,IAAA,CAAA8B;UACA;QACA;QACA,KAAA3B,SAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}