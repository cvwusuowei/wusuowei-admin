{"ast":null,"code":"export default {\n  data() {\n    return {\n      radioValue: 1,\n      workday: 1,\n      cycle01: 1,\n      cycle02: 2,\n      average01: 1,\n      average02: 1,\n      checkboxList: [],\n      checkNum: this.$options.propsData.check\n    };\n  },\n\n  name: 'crontab-day',\n  props: ['check', 'cron'],\n  methods: {\n    radioChange() {\n      ;\n      'day rachange';\n\n      if (this.radioValue !== 2 && this.cron.week !== '?') {\n        this.$emit('update', 'week', '?', 'day');\n      }\n\n      switch (this.radioValue) {\n        case 1:\n          this.$emit('update', 'day', '*');\n          break;\n\n        case 2:\n          this.$emit('update', 'day', '?');\n          break;\n\n        case 3:\n          this.$emit('update', 'day', this.cycleTotal);\n          break;\n\n        case 4:\n          this.$emit('update', 'day', this.averageTotal);\n          break;\n\n        case 5:\n          this.$emit('update', 'day', this.workday + 'W');\n          break;\n\n        case 6:\n          this.$emit('update', 'day', 'L');\n          break;\n\n        case 7:\n          this.$emit('update', 'day', this.checkboxString);\n          break;\n      }\n\n      ;\n      'day rachange end';\n    },\n\n    cycleChange() {\n      if (this.radioValue == '3') {\n        this.$emit('update', 'day', this.cycleTotal);\n      }\n    },\n\n    averageChange() {\n      if (this.radioValue == '4') {\n        this.$emit('update', 'day', this.averageTotal);\n      }\n    },\n\n    workdayChange() {\n      if (this.radioValue == '5') {\n        this.$emit('update', 'day', this.workdayCheck + 'W');\n      }\n    },\n\n    checkboxChange() {\n      if (this.radioValue == '7') {\n        this.$emit('update', 'day', this.checkboxString);\n      }\n    }\n\n  },\n  watch: {\n    radioValue: 'radioChange',\n    cycleTotal: 'cycleChange',\n    averageTotal: 'averageChange',\n    workdayCheck: 'workdayChange',\n    checkboxString: 'checkboxChange'\n  },\n  computed: {\n    cycleTotal: function () {\n      const cycle01 = this.checkNum(this.cycle01, 1, 30);\n      const cycle02 = this.checkNum(this.cycle02, cycle01 ? cycle01 + 1 : 2, 31, 31);\n      return cycle01 + '-' + cycle02;\n    },\n    averageTotal: function () {\n      const average01 = this.checkNum(this.average01, 1, 30);\n      const average02 = this.checkNum(this.average02, 1, 31 - average01 || 0);\n      return average01 + '/' + average02;\n    },\n    workdayCheck: function () {\n      const workday = this.checkNum(this.workday, 1, 31);\n      return workday;\n    },\n    checkboxString: function () {\n      let str = this.checkboxList.join();\n      return str == '' ? '*' : str;\n    }\n  }\n};","map":{"version":3,"mappings":"AA2CA;EACAA;IACA;MACAC,aADA;MAEAC,UAFA;MAGAC,UAHA;MAIAC,UAJA;MAKAC,YALA;MAMAC,YANA;MAOAC,gBAPA;MAQAC;IARA;EAUA,CAZA;;EAaAC,mBAbA;EAcAC,wBAdA;EAeAC;IACAC;MACA;MAAA;;MACA;QACA;MACA;;MACA;QACA;UACA;UACA;;QACA;UACA;UACA;;QACA;UACA;UACA;;QACA;UACA;UACA;;QACA;UACA;UACA;;QACA;UACA;UACA;;QACA;UACA;UACA;MArBA;;MAuBA;MAAA;IACA,CA9BA;;IA+BAC;MACA;QACA;MACA;IACA,CAnCA;;IAoCAC;MACA;QACA;MACA;IACA,CAxCA;;IAyCAC;MACA;QACA;MACA;IACA,CA7CA;;IA8CAC;MACA;QACA;MACA;IACA;;EAlDA,CAfA;EAmEAC;IACAhB,yBADA;IAEAiB,yBAFA;IAGAC,6BAHA;IAIAC,6BAJA;IAKAC;EALA,CAnEA;EA0EAC;IACAJ;MACA;MACA;MACA;IACA,CALA;IAMAC;MACA;MACA;MACA;IACA,CAVA;IAWAC;MACA;MACA;IACA,CAdA;IAeAC;MACA;MACA;IACA;EAlBA;AA1EA","names":["data","radioValue","workday","cycle01","cycle02","average01","average02","checkboxList","checkNum","name","props","methods","radioChange","cycleChange","averageChange","workdayChange","checkboxChange","watch","cycleTotal","averageTotal","workdayCheck","checkboxString","computed"],"sourceRoot":"src/components/Crontab","sources":["day.vue"],"sourcesContent":["<template>\r\n  <el-form size=\"small\">\r\n    <el-form-item>\r\n      <el-radio v-model=\"radioValue\" :label=\"1\"> 日，允许的通配符[, - * ? / L W] </el-radio>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-radio v-model=\"radioValue\" :label=\"2\"> 不指定 </el-radio>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-radio v-model=\"radioValue\" :label=\"3\">\r\n        周期从\r\n        <el-input-number v-model=\"cycle01\" :min=\"1\" :max=\"30\" /> -\r\n        <el-input-number v-model=\"cycle02\" :min=\"cycle01 ? cycle01 + 1 : 2\" :max=\"31\" /> 日\r\n      </el-radio>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-radio v-model=\"radioValue\" :label=\"4\">\r\n        从\r\n        <el-input-number v-model=\"average01\" :min=\"1\" :max=\"30\" /> 号开始，每\r\n        <el-input-number v-model=\"average02\" :min=\"1\" :max=\"31 - average01 || 1\" /> 日执行一次\r\n      </el-radio>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-radio v-model=\"radioValue\" :label=\"5\">\r\n        每月\r\n        <el-input-number v-model=\"workday\" :min=\"1\" :max=\"31\" /> 号最近的那个工作日\r\n      </el-radio>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-radio v-model=\"radioValue\" :label=\"6\"> 本月最后一天 </el-radio>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-radio v-model=\"radioValue\" :label=\"7\">\r\n        指定\r\n        <el-select clearable v-model=\"checkboxList\" placeholder=\"可多选\" multiple style=\"width: 100%\">\r\n          <el-option v-for=\"item in 31\" :key=\"item\" :value=\"item\">{{ item }}</el-option>\r\n        </el-select>\r\n      </el-radio>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      radioValue: 1,\r\n      workday: 1,\r\n      cycle01: 1,\r\n      cycle02: 2,\r\n      average01: 1,\r\n      average02: 1,\r\n      checkboxList: [],\r\n      checkNum: this.$options.propsData.check\r\n    }\r\n  },\r\n  name: 'crontab-day',\r\n  props: ['check', 'cron'],\r\n  methods: {\r\n    radioChange() {\r\n      ;('day rachange')\r\n      if (this.radioValue !== 2 && this.cron.week !== '?') {\r\n        this.$emit('update', 'week', '?', 'day')\r\n      }\r\n      switch (this.radioValue) {\r\n        case 1:\r\n          this.$emit('update', 'day', '*')\r\n          break\r\n        case 2:\r\n          this.$emit('update', 'day', '?')\r\n          break\r\n        case 3:\r\n          this.$emit('update', 'day', this.cycleTotal)\r\n          break\r\n        case 4:\r\n          this.$emit('update', 'day', this.averageTotal)\r\n          break\r\n        case 5:\r\n          this.$emit('update', 'day', this.workday + 'W')\r\n          break\r\n        case 6:\r\n          this.$emit('update', 'day', 'L')\r\n          break\r\n        case 7:\r\n          this.$emit('update', 'day', this.checkboxString)\r\n          break\r\n      }\r\n      ;('day rachange end')\r\n    },\r\n    cycleChange() {\r\n      if (this.radioValue == '3') {\r\n        this.$emit('update', 'day', this.cycleTotal)\r\n      }\r\n    },\r\n    averageChange() {\r\n      if (this.radioValue == '4') {\r\n        this.$emit('update', 'day', this.averageTotal)\r\n      }\r\n    },\r\n    workdayChange() {\r\n      if (this.radioValue == '5') {\r\n        this.$emit('update', 'day', this.workdayCheck + 'W')\r\n      }\r\n    },\r\n    checkboxChange() {\r\n      if (this.radioValue == '7') {\r\n        this.$emit('update', 'day', this.checkboxString)\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    radioValue: 'radioChange',\r\n    cycleTotal: 'cycleChange',\r\n    averageTotal: 'averageChange',\r\n    workdayCheck: 'workdayChange',\r\n    checkboxString: 'checkboxChange'\r\n  },\r\n  computed: {\r\n    cycleTotal: function () {\r\n      const cycle01 = this.checkNum(this.cycle01, 1, 30)\r\n      const cycle02 = this.checkNum(this.cycle02, cycle01 ? cycle01 + 1 : 2, 31, 31)\r\n      return cycle01 + '-' + cycle02\r\n    },\r\n    averageTotal: function () {\r\n      const average01 = this.checkNum(this.average01, 1, 30)\r\n      const average02 = this.checkNum(this.average02, 1, 31 - average01 || 0)\r\n      return average01 + '/' + average02\r\n    },\r\n    workdayCheck: function () {\r\n      const workday = this.checkNum(this.workday, 1, 31)\r\n      return workday\r\n    },\r\n    checkboxString: function () {\r\n      let str = this.checkboxList.join()\r\n      return str == '' ? '*' : str\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}