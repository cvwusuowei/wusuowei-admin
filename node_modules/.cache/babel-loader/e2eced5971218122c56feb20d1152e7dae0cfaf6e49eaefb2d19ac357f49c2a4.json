{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { resetRouter } from '@/router';\nexport default {\n  created() {\n    let matched = this.$route.matched.filter(item => item.name);\n    const first = matched[0];\n    if (first && first.name !== '首页') {\n      matched = [{\n        path: '/',\n        name: '首页'\n      }].concat(matched);\n    }\n    this.breadcrumbs = matched;\n    this.$store.commit('saveTab', this.$route);\n  },\n  data: function () {\n    return {\n      isSearch: false,\n      fullscreen: false,\n      breadcrumbs: []\n    };\n  },\n  methods: {\n    goTo(tab) {\n      this.$router.push({\n        path: tab.path\n      });\n    },\n    removeTab(tab) {\n      this.$store.commit('removeTab', tab);\n      if (tab.path == this.$route.path) {\n        var tabList = this.$store.state.tabList;\n        this.$router.push({\n          path: tabList[tabList.length - 1].path\n        });\n      }\n    },\n    trigger() {\n      this.$store.commit('trigger');\n    },\n    handleCommand(command) {\n      if (command == 'setting') {\n        this.$router.push({\n          path: '/setting'\n        });\n      }\n      if (command == 'logout') {\n        this.axios.post('/api/users/logout').then(({\n          data\n        }) => {\n          this.$store.commit('logout');\n          this.$store.commit('resetTab');\n          resetRouter();\n          this.$router.push({\n            path: '/login'\n          });\n        });\n      }\n    },\n    closeAllTab() {\n      this.$store.commit('resetTab');\n      this.$router.push({\n        path: '/'\n      });\n    },\n    fullScreen() {\n      let element = document.documentElement;\n      if (this.fullscreen) {\n        if (document.exitFullscreen) {\n          document.exitFullscreen();\n        } else if (document.webkitCancelFullScreen) {\n          document.webkitCancelFullScreen();\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n          document.msExitFullscreen();\n        }\n      } else {\n        if (element.requestFullscreen) {\n          element.requestFullscreen();\n        } else if (element.webkitRequestFullScreen) {\n          element.webkitRequestFullScreen();\n        } else if (element.mozRequestFullScreen) {\n          element.mozRequestFullScreen();\n        } else if (element.msRequestFullscreen) {\n          element.msRequestFullscreen();\n        }\n      }\n      this.fullscreen = !this.fullscreen;\n    }\n  },\n  computed: {\n    isActive() {\n      return function (tab) {\n        if (tab.path == this.$route.path) {\n          return 'tabs-view-item-active';\n        }\n        return 'tabs-view-item';\n      };\n    },\n    isFold() {\n      return this.$store.state.collapse ? 'el-icon-s-unfold' : 'el-icon-s-fold';\n    }\n  }\n};","map":{"version":3,"names":["resetRouter","created","matched","$route","filter","item","name","first","path","concat","breadcrumbs","$store","commit","data","isSearch","fullscreen","methods","goTo","tab","$router","push","removeTab","tabList","state","length","trigger","handleCommand","command","axios","post","then","closeAllTab","fullScreen","element","document","documentElement","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","computed","isActive","isFold","collapse"],"sources":["src/layout/components/NavBar.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"nav-bar\">\r\n      <div class=\"hambuger-container\" @click=\"trigger\">\r\n        <i :class=\"isFold\" />\r\n      </div>\r\n      <el-breadcrumb>\r\n        <el-breadcrumb-item v-for=\"item of breadcrumbs\" :key=\"item.path\">\r\n          <span v-if=\"item.redirect\">{{ item.name }}</span>\r\n          <router-link v-else :to=\"item.path\">{{ item.name }}</router-link>\r\n        </el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n      <div class=\"right-menu\">\r\n        <div class=\"screen-full\" @click=\"fullScreen\">\r\n          <i class=\"iconfont el-icon-myicwindowzoom48px\" />\r\n        </div>\r\n        <el-dropdown @command=\"handleCommand\">\r\n          <el-avatar :size=\"40\" :src=\"this.$store.state.userInfo.avatar\" />\r\n          <i class=\"el-icon-caret-bottom\" />\r\n          <el-dropdown-menu slot=\"dropdown\">\r\n            <el-dropdown-item command=\"setting\"> <i class=\"el-icon-s-custom\" />个人中心 </el-dropdown-item>\r\n            <el-dropdown-item command=\"logout\" divided>\r\n              <i class=\"iconfont el-icon-mytuichu\" />退出登录\r\n            </el-dropdown-item>\r\n          </el-dropdown-menu>\r\n        </el-dropdown>\r\n      </div>\r\n    </div>\r\n    <div class=\"tabs-view-container\">\r\n      <div class=\"tabs-wrapper\">\r\n        <span :class=\"isActive(item)\" v-for=\"item of this.$store.state.tabList\" :key=\"item.path\" @click=\"goTo(item)\">\r\n          {{ item.name }}\r\n          <i class=\"el-icon-close\" v-if=\"item.path != '/'\" @click.stop=\"removeTab(item)\" />\r\n        </span>\r\n      </div>\r\n      <div class=\"tabs-close-item\" style=\"float: right\" @click=\"closeAllTab\">全部关闭</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { resetRouter } from '@/router'\r\nexport default {\r\n  created() {\r\n    let matched = this.$route.matched.filter((item) => item.name)\r\n    const first = matched[0]\r\n    if (first && first.name !== '首页') {\r\n      matched = [{ path: '/', name: '首页' }].concat(matched)\r\n    }\r\n    this.breadcrumbs = matched\r\n    this.$store.commit('saveTab', this.$route)\r\n  },\r\n  data: function () {\r\n    return {\r\n      isSearch: false,\r\n      fullscreen: false,\r\n      breadcrumbs: []\r\n    }\r\n  },\r\n  methods: {\r\n    goTo(tab) {\r\n      this.$router.push({ path: tab.path })\r\n    },\r\n    removeTab(tab) {\r\n      this.$store.commit('removeTab', tab)\r\n      if (tab.path == this.$route.path) {\r\n        var tabList = this.$store.state.tabList\r\n        this.$router.push({ path: tabList[tabList.length - 1].path })\r\n      }\r\n    },\r\n    trigger() {\r\n      this.$store.commit('trigger')\r\n    },\r\n    handleCommand(command) {\r\n      if (command == 'setting') {\r\n        this.$router.push({ path: '/setting' })\r\n      }\r\n      if (command == 'logout') {\r\n        this.axios.post('/api/users/logout').then(({ data }) => {\r\n          this.$store.commit('logout')\r\n          this.$store.commit('resetTab')\r\n          resetRouter()\r\n          this.$router.push({ path: '/login' })\r\n        })\r\n      }\r\n    },\r\n    closeAllTab() {\r\n      this.$store.commit('resetTab')\r\n      this.$router.push({ path: '/' })\r\n    },\r\n    fullScreen() {\r\n      let element = document.documentElement\r\n      if (this.fullscreen) {\r\n        if (document.exitFullscreen) {\r\n          document.exitFullscreen()\r\n        } else if (document.webkitCancelFullScreen) {\r\n          document.webkitCancelFullScreen()\r\n        } else if (document.mozCancelFullScreen) {\r\n          document.mozCancelFullScreen()\r\n        } else if (document.msExitFullscreen) {\r\n          document.msExitFullscreen()\r\n        }\r\n      } else {\r\n        if (element.requestFullscreen) {\r\n          element.requestFullscreen()\r\n        } else if (element.webkitRequestFullScreen) {\r\n          element.webkitRequestFullScreen()\r\n        } else if (element.mozRequestFullScreen) {\r\n          element.mozRequestFullScreen()\r\n        } else if (element.msRequestFullscreen) {\r\n          element.msRequestFullscreen()\r\n        }\r\n      }\r\n      this.fullscreen = !this.fullscreen\r\n    }\r\n  },\r\n  computed: {\r\n    isActive() {\r\n      return function (tab) {\r\n        if (tab.path == this.$route.path) {\r\n          return 'tabs-view-item-active'\r\n        }\r\n        return 'tabs-view-item'\r\n      }\r\n    },\r\n    isFold() {\r\n      return this.$store.state.collapse ? 'el-icon-s-unfold' : 'el-icon-s-fold'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.nav-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 15px;\r\n  padding-right: 30px;\r\n  height: 50px;\r\n  box-shadow: 0 1px 4px rgba(0, 21, 41, 0.08);\r\n}\r\n.hambuger-container {\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  margin-right: 24px;\r\n}\r\n.tabs-wrapper {\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  white-space: nowrap;\r\n  width: 95%;\r\n}\r\n.tabs-view-container {\r\n  display: flex;\r\n  position: relative;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  height: 33px;\r\n  background: #fff;\r\n  border-bottom: 1px solid #d8dce5;\r\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12), 0 0 3px 0 rgba(0, 0, 0, 0.04);\r\n}\r\n.tabs-view-item {\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  height: 25px;\r\n  line-height: 25px;\r\n  border: 1px solid #d8dce5;\r\n  color: #495060;\r\n  background: #fff;\r\n  padding: 0 8px;\r\n  font-size: 12px;\r\n  margin-top: 4px;\r\n  margin-left: 5px;\r\n}\r\n.tabs-close-item {\r\n  position: absolute;\r\n  right: 10px;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  height: 25px;\r\n  line-height: 25px;\r\n  border: 1px solid #d8dce5;\r\n  color: #495060;\r\n  background: #fff;\r\n  padding: 0 8px;\r\n  font-size: 12px;\r\n  margin-top: 4px;\r\n  margin-left: 5px;\r\n}\r\n.tabs-view-item-active {\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  height: 26px;\r\n  line-height: 26px;\r\n  padding: 0 8px;\r\n  font-size: 12px;\r\n  margin-top: 4px;\r\n  margin-left: 5px;\r\n  background-color: #42b983;\r\n  color: #fff;\r\n  border-color: #42b983;\r\n}\r\n.tabs-view-item-active:before {\r\n  content: '';\r\n  background: #fff;\r\n  display: inline-block;\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  margin-right: 2px;\r\n}\r\n.el-icon-close {\r\n  padding: 0.1rem;\r\n}\r\n.el-icon-close:hover {\r\n  border-radius: 50%;\r\n  background: #b4bccc;\r\n  transition-duration: 0.3s;\r\n}\r\n.right-menu {\r\n  margin-left: auto;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.el-icon-caret-bottom {\r\n  margin-left: 0.5rem;\r\n  font-size: 0.75rem;\r\n}\r\n.screen-full {\r\n  cursor: pointer;\r\n  margin-right: 1rem;\r\n  font-size: 1.25rem;\r\n}\r\n*::-webkit-scrollbar {\r\n  width: 0.5rem;\r\n  height: 6px;\r\n}\r\n*::-webkit-scrollbar-thumb {\r\n  border-radius: 0.5rem;\r\n  background-color: rgba(144, 147, 153, 0.3);\r\n}\r\n</style>\r\n"],"mappings":";AAyCA,SAAAA,WAAA;AACA;EACAC,QAAA;IACA,IAAAC,OAAA,QAAAC,MAAA,CAAAD,OAAA,CAAAE,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,IAAA;IACA,MAAAC,KAAA,GAAAL,OAAA;IACA,IAAAK,KAAA,IAAAA,KAAA,CAAAD,IAAA;MACAJ,OAAA;QAAAM,IAAA;QAAAF,IAAA;MAAA,GAAAG,MAAA,CAAAP,OAAA;IACA;IACA,KAAAQ,WAAA,GAAAR,OAAA;IACA,KAAAS,MAAA,CAAAC,MAAA,iBAAAT,MAAA;EACA;EACAU,IAAA,WAAAA,CAAA;IACA;MACAC,QAAA;MACAC,UAAA;MACAL,WAAA;IACA;EACA;EACAM,OAAA;IACAC,KAAAC,GAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAZ,IAAA,EAAAU,GAAA,CAAAV;MAAA;IACA;IACAa,UAAAH,GAAA;MACA,KAAAP,MAAA,CAAAC,MAAA,cAAAM,GAAA;MACA,IAAAA,GAAA,CAAAV,IAAA,SAAAL,MAAA,CAAAK,IAAA;QACA,IAAAc,OAAA,QAAAX,MAAA,CAAAY,KAAA,CAAAD,OAAA;QACA,KAAAH,OAAA,CAAAC,IAAA;UAAAZ,IAAA,EAAAc,OAAA,CAAAA,OAAA,CAAAE,MAAA,MAAAhB;QAAA;MACA;IACA;IACAiB,QAAA;MACA,KAAAd,MAAA,CAAAC,MAAA;IACA;IACAc,cAAAC,OAAA;MACA,IAAAA,OAAA;QACA,KAAAR,OAAA,CAAAC,IAAA;UAAAZ,IAAA;QAAA;MACA;MACA,IAAAmB,OAAA;QACA,KAAAC,KAAA,CAAAC,IAAA,sBAAAC,IAAA;UAAAjB;QAAA;UACA,KAAAF,MAAA,CAAAC,MAAA;UACA,KAAAD,MAAA,CAAAC,MAAA;UACAZ,WAAA;UACA,KAAAmB,OAAA,CAAAC,IAAA;YAAAZ,IAAA;UAAA;QACA;MACA;IACA;IACAuB,YAAA;MACA,KAAApB,MAAA,CAAAC,MAAA;MACA,KAAAO,OAAA,CAAAC,IAAA;QAAAZ,IAAA;MAAA;IACA;IACAwB,WAAA;MACA,IAAAC,OAAA,GAAAC,QAAA,CAAAC,eAAA;MACA,SAAApB,UAAA;QACA,IAAAmB,QAAA,CAAAE,cAAA;UACAF,QAAA,CAAAE,cAAA;QACA,WAAAF,QAAA,CAAAG,sBAAA;UACAH,QAAA,CAAAG,sBAAA;QACA,WAAAH,QAAA,CAAAI,mBAAA;UACAJ,QAAA,CAAAI,mBAAA;QACA,WAAAJ,QAAA,CAAAK,gBAAA;UACAL,QAAA,CAAAK,gBAAA;QACA;MACA;QACA,IAAAN,OAAA,CAAAO,iBAAA;UACAP,OAAA,CAAAO,iBAAA;QACA,WAAAP,OAAA,CAAAQ,uBAAA;UACAR,OAAA,CAAAQ,uBAAA;QACA,WAAAR,OAAA,CAAAS,oBAAA;UACAT,OAAA,CAAAS,oBAAA;QACA,WAAAT,OAAA,CAAAU,mBAAA;UACAV,OAAA,CAAAU,mBAAA;QACA;MACA;MACA,KAAA5B,UAAA,SAAAA,UAAA;IACA;EACA;EACA6B,QAAA;IACAC,SAAA;MACA,iBAAA3B,GAAA;QACA,IAAAA,GAAA,CAAAV,IAAA,SAAAL,MAAA,CAAAK,IAAA;UACA;QACA;QACA;MACA;IACA;IACAsC,OAAA;MACA,YAAAnC,MAAA,CAAAY,KAAA,CAAAwB,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}